rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /todos/{todoId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);

      // Updated create rule to be less restrictive
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.title is string;

      // Updated update rule to be less restrictive
      allow update: if isAuthenticated()
        && isOwner(resource.data.userId)
        && request.resource.data.userId == resource.data.userId;

      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    match /categories/{categoryId} {
      allow read, write: if isAuthenticated() && isOwner(resource.data.userId);
    }

    match /tags/{tagId} {
      allow read, write: if isAuthenticated() && isOwner(resource.data.userId);
    }
  }
}
